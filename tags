!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AC_KSEQ_H	kseq.h	29;"	d
AC_KSORT_H	ksort.h	56;"	d
AC_KVEC_H	kvec.h	49;"	d
ALLOW_EXTEND	aln.h	111;"	d
ALL_ONE_MASK	bwt_gen.c	49;"	d	file:
ALPHABET_SIZE	bwt_gen.c	40;"	d	file:
ATTRIBUTE	utils.h	37;"	d
ATTRIBUTE	utils.h	39;"	d
BIN	Makefile	/^BIN =  cm_index cm_aln $/;"	m
BITS_IN_BYTE	bwt_gen.c	46;"	d	file:
BITS_IN_WORD	bwt_gen.c	45;"	d	file:
BITS_PER_OCC_VALUE	bwt_gen.c	52;"	d	file:
BIT_PER_CHAR	bwt_gen.c	41;"	d	file:
BWA_BWT_H	bwt.h	29;"	d
BWA_H_	bwa.h	2;"	d
BWA_IDX_ALL	bwa.h	11;"	d
BWA_IDX_BNS	bwa.h	9;"	d
BWA_IDX_BWT	bwa.h	8;"	d
BWA_IDX_PAC	bwa.h	10;"	d
BWA_UBYTE	bntseq.h	36;"	d
BWA_UBYTE	bwt.h	40;"	d
BWT	bwt_gen.c	/^typedef struct BWT {$/;"	s	file:
BWT	bwt_gen.c	/^} BWT;$/;"	t	typeref:struct:BWT	file:
BWTClearTrailingBwtCode	bwt_gen.c	/^void BWTClearTrailingBwtCode(BWT *bwt)$/;"	f
BWTCreate	bwt_gen.c	/^BWT *BWTCreate(const bgint_t textLength, unsigned int *decodeTable)$/;"	f
BWTFileSizeInWord	bwt_gen.c	/^static bgint_t BWTFileSizeInWord(const bgint_t numChar)$/;"	f	file:
BWTFree	bwt_gen.c	/^void BWTFree(BWT *bwt)$/;"	f
BWTGenerateOccValueFromBwt	bwt_gen.c	/^void BWTGenerateOccValueFromBwt(const unsigned int*  bwt, unsigned int* __restrict occValue,$/;"	f
BWTINC_INSERT_SORT_NUM_ITEM	bwt_gen.c	60;"	d	file:
BWTInc	bwt_gen.c	/^typedef struct BWTInc {$/;"	s	file:
BWTInc	bwt_gen.c	/^} BWTInc;$/;"	t	typeref:struct:BWTInc	file:
BWTIncBuildBwt	bwt_gen.c	/^static void BWTIncBuildBwt(unsigned int* insertBwt, const bgint_t *relativeRank, const bgint_t numChar,$/;"	f	file:
BWTIncBuildPackedBwt	bwt_gen.c	/^static void BWTIncBuildPackedBwt(const bgint_t *relativeRank, unsigned int* __restrict bwt, const bgint_t numChar,$/;"	f	file:
BWTIncBuildRelativeRank	bwt_gen.c	/^static void BWTIncBuildRelativeRank(bgint_t* __restrict sortedRank, bgint_t* __restrict seq,$/;"	f	file:
BWTIncConstruct	bwt_gen.c	/^static void BWTIncConstruct(BWTInc *bwtInc, const bgint_t numChar)$/;"	f	file:
BWTIncConstructFromPacked	bwt_gen.c	/^BWTInc *BWTIncConstructFromPacked(const char *inputFileName, bgint_t initialMaxBuildSize, bgint_t incMaxBuildSize)$/;"	f
BWTIncCreate	bwt_gen.c	/^BWTInc *BWTIncCreate(const bgint_t textLength, unsigned int initialMaxBuildSize, unsigned int incMaxBuildSize)$/;"	f
BWTIncFree	bwt_gen.c	/^void BWTIncFree(BWTInc *bwtInc)$/;"	f
BWTIncGetAbsoluteRank	bwt_gen.c	/^static bgint_t BWTIncGetAbsoluteRank(BWT *bwt, bgint_t* __restrict absoluteRank, bgint_t* __restrict seq,$/;"	f	file:
BWTIncMergeBwt	bwt_gen.c	/^static void BWTIncMergeBwt(const bgint_t *sortedRank, const unsigned int* oldBwt, const unsigned int *insertBwt,$/;"	f	file:
BWTIncPutPackedTextToRank	bwt_gen.c	/^static void BWTIncPutPackedTextToRank(const unsigned int *packedText, bgint_t* __restrict rank,$/;"	f	file:
BWTIncSetBuildSizeAndTextAddr	bwt_gen.c	/^static void BWTIncSetBuildSizeAndTextAddr(BWTInc *bwtInc)$/;"	f	file:
BWTIncSortKey	bwt_gen.c	/^static void BWTIncSortKey(bgint_t* __restrict key, bgint_t* __restrict seq, const bgint_t numItem)$/;"	f	file:
BWTOccValue	bwt_gen.c	/^bgint_t BWTOccValue(const BWT *bwt, bgint_t index, const unsigned int character)$/;"	f
BWTOccValueExplicit	bwt_gen.c	/^static inline bgint_t BWTOccValueExplicit(const BWT *bwt, const bgint_t occIndexExplicit,$/;"	f	file:
BWTOccValueMajorSizeInWord	bwt_gen.c	/^static bgint_t BWTOccValueMajorSizeInWord(const bgint_t numChar)$/;"	f	file:
BWTOccValueMinorSizeInWord	bwt_gen.c	/^static bgint_t BWTOccValueMinorSizeInWord(const bgint_t numChar)$/;"	f	file:
BWTResidentSizeInWord	bwt_gen.c	/^static bgint_t BWTResidentSizeInWord(const bgint_t numChar) {$/;"	f	file:
BWTSaveBwtCodeAndOcc	bwt_gen.c	/^void BWTSaveBwtCodeAndOcc(const BWT *bwt, const char *bwtFileName, const char *occValueFileName)$/;"	f
BWT_BNTSEQ_H	bntseq.h	29;"	d
BYTES_IN_WORD	bwt_gen.c	47;"	d	file:
BackwardDNAOccCount	bwt_gen.c	/^static unsigned int BackwardDNAOccCount(const unsigned int*  dna, const unsigned int index, const unsigned int character,$/;"	f	file:
BitPerBytePackedChar	bwt_gen.c	/^static unsigned int BitPerBytePackedChar(const unsigned int alphabetSize)$/;"	f	file:
BitPerWordPackedChar	bwt_gen.c	/^static unsigned int BitPerWordPackedChar(const unsigned int alphabetSize)$/;"	f	file:
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS?= $(DEBUG) -Wall -D_FILE_OFFSET_BITS=64 -pthread  $/;"	m
CHAR_PER_BYTE	bwt_gen.c	43;"	d	file:
CHAR_PER_WORD	bwt_gen.c	42;"	d	file:
ConvertBytePackedToWordPacked	bwt_gen.c	/^static void ConvertBytePackedToWordPacked(const unsigned char *input, unsigned int *output, const unsigned int alphabetSize,$/;"	f	file:
DEBUG	Makefile	/^DEBUG = -g$/;"	m
DISALLOW_EXTEND	aln.h	68;"	d
DNAA_info	test.c	/^} DNAA_info ;$/;"	t	typeref:struct:__anon31	file:
DNA_OCC_CNT_TABLE_SIZE_IN_WORD	bwt_gen.c	50;"	d	file:
DNA_OCC_SUM_EXCEPTION	bwt_gen.c	71;"	d	file:
E	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
EQUAL_KEY_THRESHOLD	bwt_gen.c	695;"	d	file:
FALSE	bwt_gen.c	58;"	d	file:
FSYNC_ON_FLUSH	utils.c	27;"	d	file:
F_PE	aln.h	6;"	d
ForwardDNAAllOccCountNoLimit	bwt_gen.c	/^static void ForwardDNAAllOccCountNoLimit(const unsigned int*  dna, const bgint_t index,$/;"	f	file:
ForwardDNAOccCount	bwt_gen.c	/^static unsigned int ForwardDNAOccCount(const unsigned int*  dna, const unsigned int index, const unsigned int character,$/;"	f	file:
GenerateDNAOccCountTable	bwt_gen.c	/^static void GenerateDNAOccCountTable(unsigned int *dnaDecodeTable)$/;"	f	file:
H0	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
H1	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
HAVE_OVERLAP	aln.h	112;"	d
Hmax	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
INSERT_SORT_NUM_ITEM	QSufSort.h	35;"	d
KEY	QSufSort.h	34;"	d
KSEQ_DECLARE	kseq.h	232;"	d
KSEQ_INIT	kseq.h	230;"	d
KSEQ_INIT2	kseq.h	224;"	d
KSEQ_INIT2	utils.c	/^KSEQ_INIT2(, gzFile, err_gzread)$/;"	f
KSORT_INIT	aln.c	/^KSORT_INIT(cm_rev_sort,aln_res_t,rev_cmp_func)$/;"	f
KSORT_INIT	aln.c	/^KSORT_INIT(cm_seed_flt,aln_seed_t,flt_fuc)$/;"	f
KSORT_INIT	ksort.h	72;"	d
KSORT_INIT_GENERIC	ksort.h	270;"	d
KSORT_INIT_STR	ksort.h	271;"	d
KSORT_SWAP	ksort.h	70;"	d
KSTREAM_INIT	kseq.h	147;"	d
KSTRING_H	kstring.h	2;"	d
KSTRING_T	kseq.h	84;"	d
KSTRING_T	kstring.h	16;"	d
KSW_XBYTE	ksw.h	6;"	d
KSW_XSTART	ksw.h	9;"	d
KSW_XSTOP	ksw.h	7;"	d
KSW_XSUBO	ksw.h	8;"	d
KS_SEP_LINE	kseq.h	41;"	d
KS_SEP_MAX	kseq.h	42;"	d
KS_SEP_SPACE	kseq.h	39;"	d
KS_SEP_TAB	kseq.h	40;"	d
L2	bwt.h	/^	bwtint_t L2[5]; \/\/ C(), cumulative count$/;"	m	struct:__anon21
LH3_UTILS_H	utils.h	29;"	d
LIBS	Makefile	/^LIBS =  -lm -lz -lpthread $/;"	m
LIKELY	ksw.c	36;"	d	file:
LIKELY	ksw.c	39;"	d	file:
MALLOC_WRAP_H	malloc_wrap.h	2;"	d
MAX_BAND_TRY	aln.c	419;"	d	file:
MAX_LONG_LENGTH	aln.c	245;"	d	file:
MINUS_INF	ksw.c	487;"	d	file:
MIN_AVAILABLE_WORD	bwt_gen.c	62;"	d	file:
MapQ	aln.c	/^int    MapQ(const aln_res_v  *rev ,  const opt_t *opt)$/;"	f
NM	aln.h	/^	uint32_t  is_rev:1,mapq:8,NM:23 ;$/;"	m	struct:__anon9
OCC_INTERVAL	bwt.h	36;"	d
OCC_INTERVAL	bwt_gen.c	54;"	d	file:
OCC_INTERVAL_MAJOR	bwt_gen.c	55;"	d	file:
OCC_INTV_MASK	bwt.h	37;"	d
OCC_INTV_SHIFT	bwt.h	35;"	d
OCC_VALUE_PER_WORD	bwt_gen.c	53;"	d	file:
OVERLAP_REGION_SIZE	aln.c	243;"	d	file:
QSINT_MAX	QSufSort.h	38;"	d
QSufSortBucketSort	QSufSort.c	/^static void QSufSortBucketSort(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t numChar, const qsint_t alphabetSize)$/;"	f	file:
QSufSortChoosePivot	QSufSort.c	/^static qsint_t QSufSortChoosePivot(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t lowestPos, $/;"	f	file:
QSufSortGenerateSaFromInverse	QSufSort.c	/^void QSufSortGenerateSaFromInverse(const qsint_t* V, qsint_t* __restrict I, const qsint_t numChar)$/;"	f
QSufSortInsertSortSplit	QSufSort.c	/^static void QSufSortInsertSortSplit(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t lowestPos, $/;"	f	file:
QSufSortSortSplit	QSufSort.c	/^static void QSufSortSortSplit(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t lowestPos, $/;"	f	file:
QSufSortSuffixSort	QSufSort.c	/^void QSufSortSuffixSort(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t numChar, const qsint_t largestInputSymbol, $/;"	f
QSufSortTransform	QSufSort.c	/^static qsint_t QSufSortTransform(qsint_t* __restrict V, qsint_t* __restrict I, const qsint_t numChar, const qsint_t largestInputSymbol, $/;"	f	file:
SHORT_LENGTH	aln.c	244;"	d	file:
TRUE	bwt_gen.c	57;"	d	file:
TextLengthFromBytePacked	bwt_gen.c	/^static bgint_t TextLengthFromBytePacked(bgint_t bytePackedLength, unsigned int bitPerChar,$/;"	f	file:
UNLIKELY	ksw.c	37;"	d	file:
UNLIKELY	ksw.c	40;"	d	file:
USE_MALLOC_WRAPPERS	malloc_wrap.c	7;"	d	file:
XA	aln.h	/^	char	*XA ;$/;"	m	struct:__anon9
__AC_KSW_H	ksw.h	2;"	d
__ALN_H	aln.h	2;"	d
__KSEQ_BASIC	kseq.h	155;"	d
__KSEQ_READ	kseq.h	175;"	d
__KSEQ_TYPE	kseq.h	217;"	d
__KS_BASIC	kseq.h	54;"	d
__KS_GETC	kseq.h	70;"	d
__KS_GETUNTIL	kseq.h	95;"	d
__KS_TYPE	kseq.h	44;"	d
__QSUFSORT_H__	QSufSort.h	30;"	d
__SEQ_H	seq.h	2;"	d
__TIME_T_H	time.h	2;"	d
__kstring_t	kseq.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	kstring.h	/^typedef struct __kstring_t {$/;"	s
__max_16	ksw.c	117;"	d	file:
__max_8	ksw.c	238;"	d	file:
__occ_aux	bwt.c	/^static inline int __occ_aux(uint64_t y, int c)$/;"	f	file:
__occ_aux4	bwt.c	163;"	d	file:
_err_fatal_simple	utils.c	/^void _err_fatal_simple(const char *func, const char *msg)$/;"	f
_err_fatal_simple_core	utils.c	/^void _err_fatal_simple_core(const char *func, const char *msg)$/;"	f
_get_pac	bntseq.c	192;"	d	file:
_kswq_t	ksw.c	/^struct _kswq_t {$/;"	s	file:
_seq_open	seq.c	/^static seqdb *_seq_open(const char *seq_fn)$/;"	f	file:
_seqdb_get	seq.c	/^void _seqdb_get(seqdb *db,seq_t **p)$/;"	f
_set_pac	bntseq.c	191;"	d	file:
a	aln.h	/^	aln_chain_t *a;$/;"	m	struct:__anon12
a	aln.h	/^	aln_res_t *a ;$/;"	m	struct:__anon10
a	aln.h	/^	aln_seed_t  *a ;$/;"	m	struct:__anon11
a	aln.h	/^	aln_seed_t *a  ;$/;"	m	struct:__anon7
a	aln.h	/^	int  a , b;$/;"	m	struct:__anon4
a	bwt.h	/^typedef struct { size_t n, m; bwtintv_t *a; } bwtintv_v;$/;"	m	struct:__anon23
a	utils.h	/^typedef struct { size_t n, m; pair64_t *a; } pair64_v;$/;"	m	struct:__anon34
a	utils.h	/^typedef struct { size_t n, m; uint64_t *a; } uint64_v;$/;"	m	struct:__anon33
a_to_a_r	seq.c	31;"	d	file:
a_to_nt4	seq.c	13;"	d	file:
add	seq.h	/^	char	*add;$/;"	m	struct:__anon30
add1	bntseq.c	/^static uint8_t *add1(const kseq_t *seq, bntseq_t *bns, uint8_t *pac, int64_t *m_pac, int *m_seqs, int *m_holes, bntamb1_t **q)$/;"	f	file:
alen	seq.h	/^	size_t	alen;$/;"	m	struct:__anon30
aln2sam	aln.c	/^int    aln2sam(const opt_t *opt , aln_info_t *a ,  int n ,aln_info_t *m  , kstring_t *t , seq_t *seq )$/;"	f
aln_chain_t	aln.h	/^} aln_chain_t ;$/;"	t	typeref:struct:__anon11
aln_chain_t_init	aln.h	121;"	d
aln_chain_v	aln.h	/^} aln_chain_v;$/;"	t	typeref:struct:__anon12
aln_chain_v_free	aln.h	143;"	d
aln_chain_v_init	aln.h	123;"	d
aln_core	aln.c	/^int  aln_core(opt_t *opt)$/;"	f
aln_info_t	aln.h	/^} aln_info_t ;$/;"	t	typeref:struct:__anon9
aln_obj	Makefile	/^aln_obj = cm_aln.o  aln.o seq.o bwa.o ksw.o kstring.o  utils.o bntseq.o bwt.o malloc_wrap.o time.o alnpe.o  test.o kthread.o$/;"	m
aln_res_t	aln.h	/^} aln_res_t ;$/;"	t	typeref:struct:__anon8
aln_res_v	aln.h	/^} aln_res_v ;$/;"	t	typeref:struct:__anon10
aln_seed_t	aln.h	/^} aln_seed_t;$/;"	t	typeref:struct:__anon6
aln_seed_v	aln.h	/^} aln_seed_v ;$/;"	t	typeref:struct:__anon7
amb	bntseq.h	/^	char amb;$/;"	m	struct:__anon17
ambs	bntseq.h	/^	bntamb1_t *ambs; \/\/ n_holes elements$/;"	m	struct:__anon18
anno	bntseq.h	/^	char *name, *anno;$/;"	m	struct:__anon16
anns	bntseq.h	/^	bntann1_t *anns; \/\/ n_seqs elements$/;"	m	struct:__anon18
app_score	aln.h	/^	int	app_score ;$/;"	m	struct:__anon8
availableWord	bwt_gen.c	/^	bgint_t availableWord;$/;"	m	struct:BWTInc	file:
average	bwt_gen.c	64;"	d	file:
b	aln.h	/^	int  a , b;$/;"	m	struct:__anon4
beg	aln.h	/^	int	beg , end ;$/;"	m	struct:__anon14
bgint_t	bwt_gen.c	/^typedef uint64_t bgint_t;$/;"	t	file:
bns	bwa.h	/^	bntseq_t *bns; \/\/ information on the reference sequences$/;"	m	struct:__anon19
bns_cnt_ambi	bntseq.c	/^int bns_cnt_ambi(const bntseq_t *bns, int64_t pos_f, int len, int *ref_id)$/;"	f
bns_depos	bntseq.h	/^static inline int64_t bns_depos(const bntseq_t *bns, int64_t pos, int *is_rev)$/;"	f
bns_destroy	bntseq.c	/^void bns_destroy(bntseq_t *bns)$/;"	f
bns_dump	bntseq.c	/^void bns_dump(const bntseq_t *bns, const char *prefix)$/;"	f
bns_fasta2bntseq	bntseq.c	/^int64_t bns_fasta2bntseq(gzFile fp_fa, const char *prefix, int for_only)$/;"	f
bns_get_seq	bntseq.c	/^uint8_t *bns_get_seq(int64_t l_pac, const uint8_t *pac, int64_t beg, int64_t end, int64_t *len)$/;"	f
bns_pos2rid	bntseq.c	/^int bns_pos2rid(const bntseq_t *bns, int64_t pos_f)$/;"	f
bns_restore	bntseq.c	/^bntseq_t *bns_restore(const char *prefix)$/;"	f
bns_restore_core	bntseq.c	/^bntseq_t *bns_restore_core(const char *ann_filename, const char* amb_filename, const char* pac_filename)$/;"	f
bntamb1_t	bntseq.h	/^} bntamb1_t;$/;"	t	typeref:struct:__anon17
bntann1_t	bntseq.h	/^} bntann1_t;$/;"	t	typeref:struct:__anon16
bntseq_t	bntseq.h	/^} bntseq_t;$/;"	t	typeref:struct:__anon18
bseq1_t	bwa.h	/^} bseq1_t;$/;"	t	typeref:struct:__anon20
bseq_read	bwa.c	/^bseq1_t *bseq_read(int chunk_size, int *n_, void *ks1_, void *ks2_)$/;"	f
buildSize	bwt_gen.c	/^	bgint_t buildSize;$/;"	m	struct:BWTInc	file:
bwa_bwt2sa	index.c	/^int bwa_bwt2sa(int argc, char *argv[]) \/\/ the "bwt2sa" command$/;"	f
bwa_escape	bwa.c	/^static char *bwa_escape(char *s)$/;"	f	file:
bwa_fa2pac	bntseq.c	/^int bwa_fa2pac(int argc, char *argv[])$/;"	f
bwa_fill_scmat	bwa.c	/^void bwa_fill_scmat(int a, int b, int8_t mat[25])$/;"	f
bwa_fix_xref	bwa.c	/^int bwa_fix_xref(const int8_t mat[25], int q, int r, int w, const bntseq_t *bns, const uint8_t *pac, uint8_t *query, int *qb, int *qe, int64_t *rb, int64_t *re)$/;"	f
bwa_gen_cigar	bwa.c	/^uint32_t *bwa_gen_cigar(const int8_t mat[25], int q, int r, int w_, int64_t l_pac, const uint8_t *pac, int l_query, uint8_t *query, int64_t rb, int64_t re, int *score, int *n_cigar, int *NM)$/;"	f
bwa_gen_cigar2	bwa.c	/^uint32_t *bwa_gen_cigar2(const int8_t mat[25], int q, int r, int w_, int64_t l_pac, const uint8_t *pac, int l_query, uint8_t *query, int64_t rb, int64_t re, int *score, int *n_cigar, int *NM)$/;"	f
bwa_idx_destroy	bwa.c	/^void bwa_idx_destroy(bwaidx_t *idx)$/;"	f
bwa_idx_infer_prefix	bwa.c	/^char *bwa_idx_infer_prefix(const char *hint)$/;"	f
bwa_idx_load	bwa.c	/^bwaidx_t *bwa_idx_load(const char *hint, int which)$/;"	f
bwa_idx_load_bwt	bwa.c	/^bwt_t *bwa_idx_load_bwt(const char *hint)$/;"	f
bwa_print_sam_hdr	bwa.c	/^void bwa_print_sam_hdr(const bntseq_t *bns, const char *rg_line)$/;"	f
bwa_rg_id	bwa.c	/^char bwa_rg_id[256];$/;"	v
bwa_seq_len	index.c	/^int64_t bwa_seq_len(const char *fn_pac)$/;"	f
bwa_set_rg	bwa.c	/^char *bwa_set_rg(const char *s)$/;"	f
bwa_verbose	bwa.c	/^int bwa_verbose = 3;$/;"	v
bwaidx_t	bwa.h	/^} bwaidx_t;$/;"	t	typeref:struct:__anon19
bwt	bwa.h	/^	bwt_t    *bwt; \/\/ FM-index$/;"	m	struct:__anon19
bwt	bwt.h	/^	uint32_t *bwt; \/\/ BWT$/;"	m	struct:__anon21
bwt	bwt_gen.c	/^	BWT *bwt;$/;"	m	struct:BWTInc	file:
bwtCode	bwt_gen.c	/^	unsigned int *bwtCode;				\/\/ BWT code$/;"	m	struct:BWT	file:
bwtSizeInWord	bwt_gen.c	/^	bgint_t bwtSizeInWord;				\/\/ Temporary variable to hold the memory allocated$/;"	m	struct:BWT	file:
bwt_2occ	bwt.c	/^void bwt_2occ(const bwt_t *bwt, bwtint_t k, bwtint_t l, ubyte_t c, bwtint_t *ok, bwtint_t *ol)$/;"	f
bwt_2occ4	bwt.c	/^void bwt_2occ4(const bwt_t *bwt, bwtint_t k, bwtint_t l, bwtint_t cntk[4], bwtint_t cntl[4])$/;"	f
bwt_B0	bwt.h	78;"	d
bwt_B00	index.c	69;"	d	file:
bwt_bwt	bwt.h	72;"	d
bwt_bwtgen	bwt_gen.c	/^void bwt_bwtgen(const char *fn_pac, const char *fn_bwt)$/;"	f
bwt_bwtgen_main	bwt_gen.c	/^int bwt_bwtgen_main(int argc, char *argv[])$/;"	f
bwt_bwtupdate_core	index.c	/^void bwt_bwtupdate_core(bwt_t *bwt)$/;"	f
bwt_cal_sa	bwt.c	/^void bwt_cal_sa(bwt_t *bwt, int intv)$/;"	f
bwt_destroy	bwt.c	/^void bwt_destroy(bwt_t *bwt)$/;"	f
bwt_dump_bwt	bwt.c	/^void bwt_dump_bwt(const char *fn, const bwt_t *bwt)$/;"	f
bwt_dump_sa	bwt.c	/^void bwt_dump_sa(const char *fn, const bwt_t *bwt)$/;"	f
bwt_extend	bwt.c	/^void bwt_extend(const bwt_t *bwt, const bwtintv_t *ik, bwtintv_t ok[4], int is_back)$/;"	f
bwt_gen_cnt_table	bwt.c	/^void bwt_gen_cnt_table(bwt_t *bwt)$/;"	f
bwt_invPsi	bwt.c	/^static inline bwtint_t bwt_invPsi(const bwt_t *bwt, bwtint_t k) \/\/ compute inverse CSA$/;"	f	file:
bwt_match_exact	bwt.c	/^int bwt_match_exact(const bwt_t *bwt, int len, const ubyte_t *str, bwtint_t *sa_begin, bwtint_t *sa_end)$/;"	f
bwt_match_exact_alt	bwt.c	/^int bwt_match_exact_alt(const bwt_t *bwt, int len, const ubyte_t *str, bwtint_t *k0, bwtint_t *l0)$/;"	f
bwt_match_exact_cm	bwt.c	/^int bwt_match_exact_cm(const bwt_t *bwt,int begin , int len , const unsigned char *str, bwtint_t *pk , bwtint_t *pl)$/;"	f
bwt_occ	bwt.c	/^bwtint_t bwt_occ(const bwt_t *bwt, bwtint_t k, ubyte_t c)$/;"	f
bwt_occ4	bwt.c	/^void bwt_occ4(const bwt_t *bwt, bwtint_t k, bwtint_t cnt[4])$/;"	f
bwt_occ_intv	bwt.h	73;"	d
bwt_pac2bwt	index.c	/^bwt_t *bwt_pac2bwt(const char *fn_pac)$/;"	f
bwt_restore_bwt	bwt.c	/^bwt_t *bwt_restore_bwt(const char *fn)$/;"	f
bwt_restore_sa	bwt.c	/^void bwt_restore_sa(const char *fn, bwt_t *bwt)$/;"	f
bwt_reverse_intvs	bwt.c	/^static void bwt_reverse_intvs(bwtintv_v *p)$/;"	f	file:
bwt_sa	bwt.c	/^bwtint_t inline bwt_sa(const bwt_t *bwt, bwtint_t k)$/;"	f
bwt_set_intv	bwt.h	80;"	d
bwt_size	bwt.h	/^	bwtint_t bwt_size; \/\/ size of bwt, about seq_len\/4$/;"	m	struct:__anon21
bwt_smem1	bwt.c	/^int bwt_smem1(const bwt_t *bwt, int len, const uint8_t *q, int x, int min_intv, bwtintv_v *mem, bwtintv_v *tmpvec[2])$/;"	f
bwt_t	bwt.h	/^} bwt_t;$/;"	t	typeref:struct:__anon21
bwtint_t	bwt.h	/^typedef uint64_t bwtint_t;$/;"	t
bwtintv_t	bwt.h	/^} bwtintv_t;$/;"	t	typeref:struct:__anon22
bwtintv_v	bwt.h	/^typedef struct { size_t n, m; bwtintv_t *a; } bwtintv_v;$/;"	t	typeref:struct:__anon23
cal_max_gap	aln.c	/^static inline int cal_max_gap (const opt_t *opt , int len)$/;"	f	file:
cal_max_gap_score	aln.c	/^static inline int cal_max_gap_score (const opt_t *opt , int  score , int len)$/;"	f	file:
cal_max_mismatch	aln.c	/^static inline int cal_max_mismatch( const opt_t *opt , int score, int len)$/;"	f	file:
calloc	malloc_wrap.h	26;"	d
calloc	malloc_wrap.h	28;"	d
ceilLog2	bwt_gen.c	/^static unsigned int ceilLog2(const unsigned int input)$/;"	f	file:
char2nt4	seq.c	/^int char2nt4(unsigned char **byte, seq_sz_t len , const char *seq, int set_al)$/;"	f
chr	is.c	34;"	d	file:
cigar	aln.h	/^	uint32_t  *cigar ;$/;"	m	struct:__anon9
cigar_t	aln.h	/^}  cigar_t ;$/;"	t	typeref:struct:__anon13
cm_chain_core	aln.c	/^int  cm_chain_core(const opt_t *opt , const mseq_t *mseq , aln_res_v  *rev)$/;"	f
cm_chain_extend	aln.c	/^void cm_chain_extend(aln_chain_t *at, aln_res_v *rev ,const seq_t *seq , const opt_t *opt)$/;"	f
cm_disallow_extend	aln.c	/^void  cm_disallow_extend(aln_chain_t *at , aln_res_v *rev , const opt_t *opt)$/;"	f
cm_mer2chain	aln.c	/^aln_chain_v *cm_mer2chain(const opt_t *opt , const seq_t *pseq)$/;"	f
cm_meraln	aln.c	/^int   cm_meraln( aln_seed_v *kv_seed ,  const seq_t *pseq , const opt_t *opt)$/;"	f
cm_pe	alnpe.c	/^int    cm_pe(const opt_t *opt , aln_res_v *rev[2])$/;"	f
cm_print_sam_hdr	cm_aln.c	/^void  cm_print_sam_hdr(const bntseq_t *bns)$/;"	f
cm_se	aln.c	/^int	cm_se( const opt_t *opt , const mseq_t *mseq , aln_res_v *rev)$/;"	f
cnt_table	bwt.h	/^	uint32_t cnt_table[256];$/;"	m	struct:__anon21
comment	bwa.h	/^	char *name, *comment, *seq, *qual, *sam;$/;"	m	struct:__anon20
cputime	utils.c	/^double cputime()$/;"	f
cumulativeCountInCurrentBuild	bwt_gen.c	/^	bgint_t *cumulativeCountInCurrentBuild;$/;"	m	struct:BWTInc	file:
cumulativeFreq	bwt_gen.c	/^	bgint_t *cumulativeFreq;			\/\/ cumulative frequency$/;"	m	struct:BWT	file:
cv	kthread.c	/^	pthread_cond_t cv;$/;"	m	struct:ktp_t	file:
data	kthread.c	/^	void *data;$/;"	m	struct:__anon28	file:
data	kthread.c	/^	void *data;$/;"	m	struct:kt_for_t	file:
decodeTable	bwt_gen.c	/^	unsigned int *decodeTable;			\/\/ For decoding BWT by table lookup$/;"	m	struct:BWT	file:
depth	ksort.h	/^	int depth;$/;"	m	struct:__anon24
e	ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon25	file:
e_del	aln.h	/^	int  e_ins , e_del ;$/;"	m	struct:__anon4
e_ins	aln.h	/^	int  e_ins , e_del ;$/;"	m	struct:__anon4
eh_t	ksw.c	/^} eh_t;$/;"	t	typeref:struct:__anon25	file:
end	aln.h	/^	int	beg , end ;$/;"	m	struct:__anon14
err_fatal	utils.c	/^void err_fatal(const char *header, const char *fmt, ...)$/;"	f
err_fatal_core	utils.c	/^void err_fatal_core(const char *header, const char *fmt, ...)$/;"	f
err_fatal_simple	utils.h	42;"	d
err_fatal_simple_core	utils.h	43;"	d
err_fclose	utils.c	/^int err_fclose(FILE *stream) $/;"	f
err_fflush	utils.c	/^int err_fflush(FILE *stream) $/;"	f
err_fprintf	utils.c	/^int err_fprintf(FILE *stream, const char *format, ...) $/;"	f
err_fputc	utils.c	/^int err_fputc(int c, FILE *stream)$/;"	f
err_fputs	utils.c	/^int err_fputs(const char *s, FILE *stream)$/;"	f
err_fread_noeof	utils.c	/^size_t err_fread_noeof(void *ptr, size_t size, size_t nmemb, FILE *stream)$/;"	f
err_fseek	utils.c	/^int err_fseek(FILE *stream, long offset, int whence)$/;"	f
err_ftell	utils.c	/^long err_ftell(FILE *stream)$/;"	f
err_fwrite	utils.c	/^size_t err_fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)$/;"	f
err_gzclose	utils.c	/^int err_gzclose(gzFile file)$/;"	f
err_gzread	utils.c	/^int err_gzread(gzFile file, void *ptr, unsigned int len)$/;"	f
err_printf	utils.c	/^int err_printf(const char *format, ...) $/;"	f
err_putchar	utils.h	81;"	d
err_puts	utils.h	83;"	d
err_rewind	utils.h	74;"	d
err_xreopen_core	utils.c	/^FILE *err_xreopen_core(const char *func, const char *fn, const char *mode, FILE *fp)$/;"	f
err_xzopen_core	utils.c	/^gzFile err_xzopen_core(const char *func, const char *fn, const char *mode)$/;"	f
extend_seed	aln.c	/^inline int  extend_seed( const opt_t *opt , const  seq_t *seq ,  aln_res_t *res , int direct )$/;"	f
file_ref_t	aln.h	/^}  file_ref_t;$/;"	t	typeref:struct:__anon3
file_seq_t	aln.h	/^}  file_seq_t;$/;"	t	typeref:struct:__anon2
fin	seq.c	/^	FILE  *fin ;$/;"	m	struct:__anon29	file:
find_deletion	test.c	/^int	find_deletion( char *name , int l_seed , int sel)$/;"	f
find_insertion	test.c	/^int	find_insertion( char *name , int l_seed , int sel)$/;"	f
find_mismatch	test.c	/^int	find_mismatch( char *name , int l_seed , int sel)$/;"	f
firstCharInLastIteration	bwt_gen.c	/^	unsigned int firstCharInLastIteration;$/;"	m	struct:BWTInc	file:
flag	aln.h	/^	int	flag;$/;"	m	struct:__anon9
flag	aln.h	/^	int  flag;$/;"	m	struct:__anon4
flags	aln.h	/^	int	 flags ;$/;"	m	struct:__anon6
flags	aln.h	/^	int	flags;$/;"	m	struct:__anon11
flt_fuc	aln.c	117;"	d	file:
fn	aln.h	/^	char	*fn;$/;"	m	struct:__anon2
fn	aln.h	/^	char	*fn;$/;"	m	struct:__anon3
fp_pac	bntseq.h	/^	FILE *fp_pac;$/;"	m	struct:__anon18
fr	aln.h	/^	file_ref_t *fr;$/;"	m	struct:__anon4
fread_fix	bwt.c	/^static bwtint_t fread_fix(FILE *fp, bwtint_t size, void *a)$/;"	f	file:
fs	aln.h	/^	file_seq_t *fs;$/;"	m	struct:__anon4
func	kthread.c	/^	void (*func)(void*,long,int);$/;"	m	struct:kt_for_t	file:
func	kthread.c	/^	void *(*func)(void*, int, void*);$/;"	m	struct:ktp_t	file:
g_defr	ksw.c	/^const kswr_t g_defr = { 0, -1, -1, -1, -1, -1, -1 };$/;"	v
g_log_n	aln.c	/^int	g_log_n[256];$/;"	v
gain_test_name_info	test.c	/^DNAA_info *gain_test_name_info(char *name , int l_seed , int sel)$/;"	f
gen_mat	cm_aln.c	/^static void  gen_mat(int a , int b, int8_t mat[25])$/;"	f	file:
getBuckets	is.c	/^static void getBuckets(const int *C, int *B, int k, int end)$/;"	f	file:
getCounts	is.c	/^static void getCounts(const unsigned char *T, int *C, int n, int k, int cs)$/;"	f	file:
get_run_time	time.c	/^double get_run_time(void)$/;"	f
get_top_value	aln.h	127;"	d
gi	bntseq.h	/^	uint32_t gi;$/;"	m	struct:__anon16
h	ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon25	file:
hash_64	utils.h	/^static inline uint64_t hash_64(uint64_t key)$/;"	f
i	kthread.c	/^	long i;$/;"	m	struct:__anon27	file:
idx	aln.h	/^	bwaidx_t *idx;$/;"	m	struct:__anon3
incMaxBuildSize	bwt_gen.c	/^	bgint_t incMaxBuildSize;$/;"	m	struct:BWTInc	file:
index_obj	Makefile	/^index_obj = index.o  utils.o bntseq.o bwt_gen.o QSufSort.o bwt.o is.o time.o  $/;"	m
induceSA	is.c	/^static void induceSA(const unsigned char *T, int *SA, int *C, int *B, int n, int k, int cs)$/;"	f	file:
infer_bw	aln.c	/^static inline int infer_bw(int l1 ,int l2 ,int score , int a , int q ,int r)$/;"	f	file:
info	bwt.h	/^	bwtint_t x[3], info;$/;"	m	struct:__anon22
init_g_log_n	aln.c	/^void init_g_log_n()$/;"	f
init_opt	cm_aln.c	/^static inline opt_t *init_opt()$/;"	f	file:
init_run_time	time.c	/^void init_run_time(void)$/;"	f
initialMaxBuildSize	bwt_gen.c	/^	bgint_t initialMaxBuildSize;$/;"	m	struct:BWTInc	file:
initializeVAL	bwt_gen.c	/^static void initializeVAL(unsigned int *startAddr, const bgint_t length, const unsigned int initValue)$/;"	f	file:
initializeVAL_bg	bwt_gen.c	/^static void initializeVAL_bg(bgint_t *startAddr, const bgint_t length, const bgint_t initValue)$/;"	f	file:
inverseSa0	bwt_gen.c	/^	bgint_t inverseSa0;					\/\/ SA-1[0]$/;"	m	struct:BWT	file:
is_bwt	is.c	/^int is_bwt(ubyte_t *T, int n)$/;"	f
is_extend	aln.h	66;"	d
is_overlap	aln.h	67;"	d
is_rev	aln.h	/^	uint32_t  is_rev:1,mapq:8,NM:23 ;$/;"	m	struct:__anon9
is_sa	is.c	/^int is_sa(const ubyte_t *T, int *SA, int n)$/;"	f
key_cmp	test.c	/^int  key_cmp(const void *p1  , const void *p2)$/;"	f
key_pos_t	aln.h	/^}  key_pos_t ;$/;"	t	typeref:struct:__anon14
key_pos_v	aln.h	/^} key_pos_v ;$/;"	t	typeref:struct:__anon15
kputc	kstring.h	/^static inline int kputc(int c, kstring_t *s)$/;"	f
kputl	kstring.h	/^static inline int kputl(long c, kstring_t *s)$/;"	f
kputs	kstring.h	/^static inline int kputs(const char *p, kstring_t *s)$/;"	f
kputsn	kstring.h	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f
kputuw	kstring.h	/^static inline int kputuw(unsigned c, kstring_t *s)$/;"	f
kputw	kstring.h	/^static inline int kputw(int c, kstring_t *s)$/;"	f
kpv	test.c	/^	key_pos_v  *kpv;$/;"	m	struct:__anon31	file:
kroundup32	kseq.h	92;"	d
kroundup32	kstring.h	12;"	d
ks_combsort	ksort.h	259;"	d
ks_eof	kseq.h	51;"	d
ks_heapadjust	ksort.h	262;"	d
ks_heapmake	ksort.h	261;"	d
ks_heapsort	ksort.h	260;"	d
ks_introsort	ksort.h	258;"	d
ks_isort_stack_t	ksort.h	/^} ks_isort_stack_t;$/;"	t	typeref:struct:__anon24
ks_ksmall	ksort.h	263;"	d
ks_lt_generic	ksort.h	265;"	d
ks_lt_str	ksort.h	266;"	d
ks_mergesort	ksort.h	257;"	d
ks_resize	kstring.h	/^static inline void ks_resize(kstring_t *s, size_t size)$/;"	f
ks_rewind	kseq.h	52;"	d
kseq2bseq1	bwa.c	/^static inline void kseq2bseq1(const kseq_t *ks, bseq1_t *s)$/;"	f	file:
kseq_rewind	kseq.h	153;"	d
ksprintf	kstring.c	/^int ksprintf(kstring_t *s, const char *fmt, ...)$/;"	f
ksstr_t	ksort.h	/^typedef const char *ksstr_t;$/;"	t
kstring_t	kseq.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	kstring.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
ksw_align	ksw.c	/^kswr_t ksw_align(int qlen, uint8_t *query, int tlen, uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int xtra, kswq_t **qry)$/;"	f
ksw_align2	ksw.c	/^kswr_t ksw_align2(int qlen, uint8_t *query, int tlen, uint8_t *target, int m, const int8_t *mat, int o_del, int e_del, int o_ins, int e_ins, int xtra, kswq_t **qry)$/;"	f
ksw_extend	ksw.c	/^int ksw_extend(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int end_bonus, int zdrop, int h0, int *qle, int *tle, int *gtle, int *gscore, int *max_off)$/;"	f
ksw_extend2	ksw.c	/^int ksw_extend2(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int o_del, int e_del, int o_ins, int e_ins, int w, int end_bonus, int zdrop, int h0, int *_qle, int *_tle, int *_gtle, int *_gscore, int *_max_off)$/;"	f
ksw_global	ksw.c	/^int ksw_global(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int *n_cigar_, uint32_t **cigar_)$/;"	f
ksw_global2	ksw.c	/^int ksw_global2(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int o_del, int e_del, int o_ins, int e_ins, int w, int *n_cigar_, uint32_t **cigar_)$/;"	f
ksw_i16	ksw.c	/^kswr_t ksw_i16(kswq_t *q, int tlen, const uint8_t *target, int _o_del, int _e_del, int _o_ins, int _e_ins, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
ksw_qinit	ksw.c	/^kswq_t *ksw_qinit(int size, int qlen, const uint8_t *query, int m, const int8_t *mat)$/;"	f
ksw_u8	ksw.c	/^kswr_t ksw_u8(kswq_t *q, int tlen, const uint8_t *target, int _o_del, int _e_del, int _o_ins, int _e_ins, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
kswq_t	ksw.h	/^typedef struct _kswq_t kswq_t;$/;"	t	typeref:struct:_kswq_t
kswr_t	ksw.h	/^} kswr_t;$/;"	t	typeref:struct:__anon26
kt_for	kthread.c	/^void kt_for(int n_threads, void (*func)(void*,long,int), void *data, long n)$/;"	f
kt_for_t	kthread.c	/^typedef struct kt_for_t {$/;"	s	file:
kt_for_t	kthread.c	/^} kt_for_t;$/;"	t	typeref:struct:kt_for_t	file:
kt_pipeline	kthread.c	/^void kt_pipeline(int n_threads, void *(*func)(void*, int, void*), void *shared_data, int n_steps)$/;"	f
ktf_worker	kthread.c	/^static void *ktf_worker(void *data)$/;"	f	file:
ktf_worker_t	kthread.c	/^} ktf_worker_t;$/;"	t	typeref:struct:__anon27	file:
ktp_t	kthread.c	/^typedef struct ktp_t {$/;"	s	file:
ktp_t	kthread.c	/^} ktp_t;$/;"	t	typeref:struct:ktp_t	file:
ktp_worker	kthread.c	/^static void *ktp_worker(void *data)$/;"	f	file:
ktp_worker_t	kthread.c	/^} ktp_worker_t;$/;"	t	typeref:struct:__anon28	file:
kv_A	kvec.h	62;"	d
kv_a	kvec.h	88;"	d
kv_copy	kvec.h	69;"	d
kv_destroy	kvec.h	61;"	d
kv_init	kvec.h	60;"	d
kv_max	kvec.h	65;"	d
kv_pop	kvec.h	63;"	d
kv_push	kvec.h	75;"	d
kv_pushp	kvec.h	83;"	d
kv_resize	kvec.h	67;"	d
kv_roundup32	kvec.h	57;"	d
kv_size	kvec.h	64;"	d
kvec_t	kvec.h	59;"	d
l	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l_pac	bntseq.h	/^	int64_t l_pac;$/;"	m	struct:__anon18
l_seed	aln.h	/^	int  l_seed ;$/;"	m	struct:__anon4
l_seq	bwa.h	/^	int l_seq;$/;"	m	struct:__anon20
leadingZero	bwt_gen.c	/^unsigned int leadingZero(const unsigned int input)$/;"	f
left	ksort.h	/^	void *left, *right;$/;"	m	struct:__anon24
len	aln.h	/^	int	len ;$/;"	m	struct:__anon13
len	aln.h	/^	int	len ;$/;"	m	struct:__anon6
len	bntseq.h	/^	int32_t len;$/;"	m	struct:__anon16
len	bntseq.h	/^	int32_t len;$/;"	m	struct:__anon17
len	seq.h	/^	size_t  len;$/;"	m	struct:__anon30
linear_aln	aln.c	/^int  linear_aln( const opt_t *opt ,  const seq_t *seq , aln_seed_t *d , aln_res_t *res , int direct )$/;"	f
m	aln.h	/^	int	m,n;$/;"	m	struct:__anon11
m	aln.h	/^	int     m,n,size,offset;$/;"	m	struct:__anon12
m	aln.h	/^	int m,n ;$/;"	m	struct:__anon10
m	aln.h	/^	int n , m ;$/;"	m	struct:__anon7
m	bwt.h	/^typedef struct { size_t n, m; bwtintv_t *a; } bwtintv_v;$/;"	m	struct:__anon23
m	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	utils.h	/^typedef struct { size_t n, m; pair64_t *a; } pair64_v;$/;"	m	struct:__anon34
m	utils.h	/^typedef struct { size_t n, m; uint64_t *a; } uint64_v;$/;"	m	struct:__anon33
main	bwt_gen.c	/^int main(int argc, char *argv[])$/;"	f
main	cm_aln.c	/^int	main(int argc , char *argv[])$/;"	f
main	index.c	/^int main( int argc , char *argv[])$/;"	f
main	kstring.c	/^int main()$/;"	f
main	ksw.c	/^int main(int argc, char *argv[])$/;"	f
malloc	malloc_wrap.h	31;"	d
malloc	malloc_wrap.h	33;"	d
mapq	aln.h	/^	uint32_t  is_rev:1,mapq:8,NM:23 ;$/;"	m	struct:__anon9
mark_chain_se	aln.c	/^void  mark_chain_se(aln_chain_v *av ,const opt_t *opt)$/;"	f
mat	aln.h	/^	int8_t mat[25];$/;"	m	struct:__anon4
max	bwt_gen.c	66;"	d	file:
max	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
mdiff	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
med3	QSufSort.c	38;"	d	file:
med3	bwt_gen.c	67;"	d	file:
min	QSufSort.c	37;"	d	file:
min	bwt_gen.c	65;"	d	file:
mseq	aln.c	/^	mseq_t *mseq ;$/;"	m	struct:__anon1	file:
mseq_t	aln.h	/^} mseq_t ;$/;"	t	typeref:struct:__anon5
multi_seq_free	aln.c	/^void  multi_seq_free(mseq_t *s, int sel)$/;"	f
multi_seq_get	aln.c	/^int   multi_seq_get(seqdb_t db, mseq_t *s){$/;"	f
multi_seq_release	aln.c	/^void  multi_seq_release(seq_t *seq){$/;"	f
mutex	kthread.c	/^	pthread_mutex_t mutex;$/;"	m	struct:ktp_t	file:
n	aln.h	/^	int	m,n;$/;"	m	struct:__anon11
n	aln.h	/^	int     m,n,size,offset;$/;"	m	struct:__anon12
n	aln.h	/^	int    n;$/;"	m	struct:__anon15
n	aln.h	/^	int m,n ;$/;"	m	struct:__anon10
n	aln.h	/^	int n , m ;$/;"	m	struct:__anon7
n	bwt.h	/^typedef struct { size_t n, m; bwtintv_t *a; } bwtintv_v;$/;"	m	struct:__anon23
n	kthread.c	/^	long n;$/;"	m	struct:kt_for_t	file:
n	utils.h	/^typedef struct { size_t n, m; pair64_t *a; } pair64_v;$/;"	m	struct:__anon34
n	utils.h	/^typedef struct { size_t n, m; uint64_t *a; } uint64_v;$/;"	m	struct:__anon33
n_ambs	bntseq.h	/^	int32_t n_ambs;$/;"	m	struct:__anon16
n_cigar	aln.h	/^	int	n_cigar ;$/;"	m	struct:__anon9
n_del	test.c	/^	int  n_del ;   \/\/ simulation  number of deletion  ext$/;"	m	struct:__anon31	file:
n_ext	aln.h	/^	int	n_ext ;$/;"	m	struct:__anon8
n_gap	aln.h	/^	int	n_gap ;$/;"	m	struct:__anon8
n_gap	test.c	/^	int  n_gap ;   \/\/ simulation  number of gap $/;"	m	struct:__anon31	file:
n_holes	bntseq.h	/^	int32_t n_holes;$/;"	m	struct:__anon18
n_ins	test.c	/^	int  n_ins ;   \/\/ simulation  number of insertion ext$/;"	m	struct:__anon31	file:
n_match	test.c	/^	int  n_match ; \/\/ simulation number of match$/;"	m	struct:__anon31	file:
n_mis	aln.h	/^	int	n_mis ;$/;"	m	struct:__anon8
n_mis	test.c	/^	int  n_mis ;   \/\/ simulation  number of mismatch$/;"	m	struct:__anon31	file:
n_need	aln.h	/^	int  n_need ;$/;"	m	struct:__anon4
n_need	aln.h	/^	uint64_t  n_need;$/;"	m	struct:__anon5
n_sa	bwt.h	/^	bwtint_t n_sa;$/;"	m	struct:__anon21
n_seq	aln.h	/^	uint64_t  n_seq;$/;"	m	struct:__anon5
n_seqs	bntseq.h	/^	int32_t n_seqs;$/;"	m	struct:__anon18
n_steps	kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	file:
n_thread	aln.h	/^	int  n_thread ;$/;"	m	struct:__anon4
n_threads	kthread.c	/^	int n_threads;$/;"	m	struct:kt_for_t	file:
n_workers	kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	file:
name	bntseq.h	/^	char *name, *anno;$/;"	m	struct:__anon16
name	bwa.h	/^	char *name, *comment, *seq, *qual, *sam;$/;"	m	struct:__anon20
name	seq.h	/^	char	*name;$/;"	m	struct:__anon30
nlen	seq.h	/^	size_t	nlen;$/;"	m	struct:__anon30
nt4_table	seq.c	/^char nt4_table[32]={$/;"	v
numberOfIterationDone	bwt_gen.c	/^	unsigned int numberOfIterationDone;$/;"	m	struct:BWTInc	file:
o_del	aln.h	/^	int  o_del , o_ins ;$/;"	m	struct:__anon4
o_ins	aln.h	/^	int  o_del , o_ins ;$/;"	m	struct:__anon4
occMajorSizeInWord	bwt_gen.c	/^	bgint_t occMajorSizeInWord;			\/\/ Temporary variable to hold the memory allocated$/;"	m	struct:BWT	file:
occSizeInWord	bwt_gen.c	/^	bgint_t occSizeInWord;				\/\/ Temporary variable to hold the memory allocated$/;"	m	struct:BWT	file:
occValue	bwt_gen.c	/^	unsigned int *occValue;				\/\/ Occurrence values stored explicitly$/;"	m	struct:BWT	file:
occValueMajor	bwt_gen.c	/^	bgint_t *occValueMajor;				\/\/ Occurrence values stored explicitly$/;"	m	struct:BWT	file:
offset	aln.h	/^	int     m,n,size,offset;$/;"	m	struct:__anon12
offset	bntseq.h	/^	int64_t offset;$/;"	m	struct:__anon16
offset	bntseq.h	/^	int64_t offset;$/;"	m	struct:__anon17
op	aln.h	/^	char	 op ;$/;"	m	struct:__anon13
opt	aln.c	/^	opt_t  *opt ;$/;"	m	struct:__anon1	file:
opt_t	aln.h	/^} opt_t ;$/;"	t	typeref:struct:__anon4
overlap	aln.h	/^	int  overlap ;$/;"	m	struct:__anon4
pac	bwa.h	/^	uint8_t  *pac; \/\/ the actual 2-bit encoded reference sequences with 'N' converted to a random base$/;"	m	struct:__anon19
packedShift	bwt_gen.c	/^	unsigned int *packedShift;$/;"	m	struct:BWTInc	file:
packedText	bwt_gen.c	/^	unsigned int *packedText;$/;"	m	struct:BWTInc	file:
pair64_lt	utils.c	45;"	d	file:
pair64_t	utils.h	/^} pair64_t;$/;"	t	typeref:struct:__anon32
pair64_v	utils.h	/^typedef struct { size_t n, m; pair64_t *a; } pair64_v;$/;"	t	typeref:struct:__anon34
pen_clip3	aln.h	/^	int  pen_clip5 , pen_clip3 ;$/;"	m	struct:__anon4
pen_clip5	aln.h	/^	int  pen_clip5 , pen_clip3 ;$/;"	m	struct:__anon4
pl	kthread.c	/^	struct ktp_t *pl;$/;"	m	struct:__anon28	typeref:struct:__anon28::ktp_t	file:
pos	aln.h	/^	int64_t  pos;$/;"	m	struct:__anon9
pos	test.c	/^	int  pos[2];     \/\/  simulation  coordinate$/;"	m	struct:__anon31	file:
primary	bwt.h	/^	bwtint_t primary; \/\/ S^{-1}(0), or the primary index of BWT$/;"	m	struct:__anon21
print_at_info	test.c	/^void  print_at_info(aln_chain_t *at ){$/;"	f
print_av_info	test.c	/^void  print_av_info(aln_chain_v av , const opt_t *opt){$/;"	f
print_cigar	bwa.c	/^int   print_cigar =  0  ;$/;"	v
print_res_info	test.c	/^void	print_res_info(aln_res_t *at)$/;"	f
print_resv_info	test.c	/^void   print_resv_info(aln_res_v *av)$/;"	f
print_sam	aln.c	/^int	print_sam( const mseq_t *mseq )$/;"	f
push_chain	aln.h	131;"	d
push_chain_seed	aln.h	129;"	d
push_cigar	ksw.c	/^static inline uint32_t *push_cigar(int *n_cigar, int *m_cigar, uint32_t *cigar, int op, int len)$/;"	f	file:
qb	ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon26
qe	ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon26
qlen	ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
qlen	seq.h	/^	size_t	qlen;$/;"	m	struct:__anon30
qp	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
qsint_t	QSufSort.h	/^typedef int64_t qsint_t;$/;"	t
qual	bwa.h	/^	char *name, *comment, *seq, *qual, *sam;$/;"	m	struct:__anon20
qual	seq.h	/^	char	*qual;$/;"	m	struct:__anon30
query_b	aln.h	/^	int	 query_b, query_e;$/;"	m	struct:__anon6
query_b	aln.h	/^	int	query_b, query_e;$/;"	m	struct:__anon8
query_e	aln.h	/^	int	 query_b, query_e;$/;"	m	struct:__anon6
query_e	aln.h	/^	int	query_b, query_e;$/;"	m	struct:__anon8
realloc	malloc_wrap.h	36;"	d
realloc	malloc_wrap.h	38;"	d
realtime	utils.c	/^double realtime()$/;"	f
ref_b	aln.h	/^	bwtint_t ref_b,   ref_e;$/;"	m	struct:__anon6
ref_b	aln.h	/^	bwtint_t ref_b,   ref_e;$/;"	m	struct:__anon8
ref_e	aln.h	/^	bwtint_t ref_b,   ref_e;$/;"	m	struct:__anon6
ref_e	aln.h	/^	bwtint_t ref_b,   ref_e;$/;"	m	struct:__anon8
res2alninfo	aln.c	/^aln_info_t res2alninfo(const opt_t *opt , aln_res_t *res , const seq_t  *seq )$/;"	f
ret	aln.c	/^int  ret =  1 ; $/;"	v
rev	aln.c	/^	aln_res_v  *rev[2] ;$/;"	m	struct:__anon1	file:
rev_cmp_func	aln.c	659;"	d	file:
revseq	ksw.c	/^static inline void revseq(int l, uint8_t *s)$/;"	f	file:
rid	aln.h	/^	int	rid ;$/;"	m	struct:__anon9
rid	aln.h	/^	int	rid;$/;"	m	struct:__anon8
right	aln.h	/^	int	right ;$/;"	m	struct:__anon14
right	ksort.h	/^	void *left, *right;$/;"	m	struct:__anon24
round_size	aln.h	125;"	d
running	kthread.c	/^	int step, running;$/;"	m	struct:__anon28	file:
s	kseq.h	/^	char *s;$/;"	m	struct:__kstring_t
s	kstring.h	/^	char *s;$/;"	m	struct:__kstring_t
sa	bwt.h	/^	bwtint_t *sa;$/;"	m	struct:__anon21
sa_intv	bwt.h	/^	int sa_intv;$/;"	m	struct:__anon21
sais_main	is.c	/^static int sais_main(const unsigned char *T, int *SA, int fs, int n, int k, int cs)$/;"	f	file:
sam	bwa.h	/^	char *name, *comment, *seq, *qual, *sam;$/;"	m	struct:__anon20
sam	seq.h	/^	char    *sam ;$/;"	m	struct:__anon30
sbgint_t	bwt_gen.c	/^typedef int64_t sbgint_t;$/;"	t	file:
score	aln.h	/^	int	score ;$/;"	m	struct:__anon9
score	ksw.h	/^	int score; \/\/ best score$/;"	m	struct:__anon26
score2	ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon26
se_core	aln.c	/^int	se_core(const opt_t *opt , seq_t *seq , const aln_res_v *rev)$/;"	f
seed	bntseq.h	/^	uint32_t seed;$/;"	m	struct:__anon18
seedcov	aln.h	/^	int	seedcov;$/;"	m	struct:__anon11
seq	aln.h	/^	seq_t	*seq;$/;"	m	struct:__anon5
seq	bwa.h	/^	char *name, *comment, *seq, *qual, *sam;$/;"	m	struct:__anon20
seq	seq.h	/^	char	*seq;$/;"	m	struct:__anon30
seq_complement	seq.c	/^int seq_complement(int len ,unsigned char *seq)$/;"	f
seq_len	bwt.h	/^	bwtint_t seq_len; \/\/ sequence length$/;"	m	struct:__anon21
seq_open	seq.c	/^seqdb_t seq_open(const char *seq_fn)$/;"	f
seq_reverse	seq.c	/^int seq_reverse(int len ,unsigned char *seq)$/;"	f
seq_sz_t	seq.h	/^typedef uint32_t  seq_sz_t;$/;"	t
seq_t	seq.h	/^} seq_t;$/;"	t	typeref:struct:__anon30
seqdb	aln.h	/^	seqdb_t	seqdb;$/;"	m	struct:__anon2
seqdb	seq.c	/^}seqdb;$/;"	t	typeref:struct:__anon29	file:
seqdb_close	seq.c	/^int seqdb_close(seqdb_t db)$/;"	f
seqdb_get	seq.c	/^void  seqdb_get(seqdb_t db ,seq_t **pseq)$/;"	f
seqdb_t	seq.h	/^typedef void *seqdb_t;$/;"	t
seqt_release	seq.c	/^int seqt_release(seq_t *seq)$/;"	f
shared	kthread.c	/^	void *shared;$/;"	m	struct:ktp_t	file:
shift	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
short_result	aln.c	/^inline int  short_result( aln_seed_t *d ,  int direct , aln_res_t *res , const opt_t *opt )$/;"	f
size	aln.h	/^	int     m,n,size,offset;$/;"	m	struct:__anon12
size	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
slen	ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
start_time	time.c	/^static clock_t start_time=0;$/;"	v	file:
steal_work	kthread.c	/^static inline long steal_work(kt_for_t *t)$/;"	f	file:
step	kthread.c	/^	int step, running;$/;"	m	struct:__anon28	file:
strand	test.c	/^	int  strand[2];  \/\/ simulation  strand $/;"	m	struct:__anon31	file:
strdup	malloc_wrap.h	41;"	d
strdup	malloc_wrap.h	43;"	d
sw_score	aln.h	/^	int	sw_score  ;$/;"	m	struct:__anon8
swap	QSufSort.c	39;"	d	file:
swap	bwt_gen.c	68;"	d	file:
t	kthread.c	/^	struct kt_for_t *t;$/;"	m	struct:__anon27	typeref:struct:__anon27::kt_for_t	file:
t_end	cm_aln.c	/^double t_start,t_end;$/;"	v
t_start	cm_aln.c	/^double t_start,t_end;$/;"	v
tb	ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon26
te	ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon26
te2	ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon26
test_bns	test.c	/^int  test_bns(const aln_chain_v av , const seq_t *seq ,const opt_t *opt )$/;"	f
test_pos	test.c	/^int	test_pos(char *name ,  const aln_chain_v  av , int sel , int l_seed ,const opt_t *opt)$/;"	f
textBuffer	bwt_gen.c	/^	unsigned char *textBuffer;$/;"	m	struct:BWTInc	file:
textLength	bwt_gen.c	/^	bgint_t textLength;					\/\/ length of the text$/;"	m	struct:BWT	file:
threshold	aln.h	/^	int  threshold ;$/;"	m	struct:__anon4
ticks_per_sec	time.c	/^static clock_t ticks_per_sec=1;$/;"	v	file:
total_num	aln.h	/^	uint64_t  total_num ;$/;"	m	struct:__anon5
trim_readno	bwa.c	/^static inline void trim_readno(kstring_t *s)$/;"	f	file:
truncateLeft	bwt_gen.c	69;"	d	file:
truncateRight	bwt_gen.c	70;"	d	file:
ubyte_t	bntseq.h	/^typedef uint8_t ubyte_t;$/;"	t
ubyte_t	bwt.h	/^typedef unsigned char ubyte_t;$/;"	t
ubyte_t	is.c	/^typedef unsigned char ubyte_t;$/;"	t	file:
uint64_v	utils.h	/^typedef struct { size_t n, m; uint64_t *a; } uint64_v;$/;"	t	typeref:struct:__anon33
unit_extend_1	test.c	/^int	unit_extend_1( char *name , aln_res_v  *rev , int sel , int l_seed , const opt_t *opt)$/;"	f
unit_sv_seed	test.c	/^void  unit_sv_seed(aln_seed_v *kv_seed , const opt_t *opt)$/;"	f
usage	cm_aln.c	/^static int usage(){$/;"	f	file:
usage	index.c	/^static int usage(){$/;"	f	file:
val	aln.h	/^	key_pos_t *val ;$/;"	m	struct:__anon15
verbose	aln.h	/^	int  verbose;$/;"	m	struct:__anon4
w	aln.h	/^	int  w;$/;"	m	struct:__anon4
w	kthread.c	/^	ktf_worker_t *w;$/;"	m	struct:kt_for_t	file:
worker1	aln.c	/^static  void worker1(void *data , int  i , int tid)$/;"	f	file:
worker_t	aln.c	/^} worker_t ;$/;"	t	typeref:struct:__anon1	file:
workers	kthread.c	/^	ktp_worker_t *workers;$/;"	m	struct:ktp_t	file:
workingMemory	bwt_gen.c	/^	unsigned int *workingMemory;$/;"	m	struct:BWTInc	file:
wrap_calloc	malloc_wrap.c	/^void *wrap_calloc(size_t nmemb, size_t size,$/;"	f
wrap_malloc	malloc_wrap.c	/^void *wrap_malloc(size_t size,$/;"	f
wrap_realloc	malloc_wrap.c	/^void *wrap_realloc(void *ptr, size_t size,$/;"	f
wrap_strdup	malloc_wrap.c	/^char *wrap_strdup(const char *s,$/;"	f
x	bwt.h	/^	bwtint_t x[3], info;$/;"	m	struct:__anon22
x	utils.h	/^	uint64_t x, y;$/;"	m	struct:__anon32
xassert	utils.h	49;"	d
xeorror	seq.h	32;"	d
xopen	utils.h	45;"	d
xreopen	utils.h	46;"	d
xzopen	utils.h	47;"	d
y	utils.h	/^	uint64_t x, y;$/;"	m	struct:__anon32
zdrop	aln.h	/^	int  zdrop ;$/;"	m	struct:__anon4
